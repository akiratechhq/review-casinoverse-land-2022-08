{{> partials/splash}}

[TOC]

## Details

- **Client** {{client_name}}
- **Date** {{date}}
- **Lead reviewer** Daniel Luca ([@cleanunicorn](https://twitter.com/cleanunicorn))
- **Reviewers** Daniel Luca ([@cleanunicorn](https://twitter.com/cleanunicorn)), Andrei Simion ([@andreiashu](https://twitter.com/andreiashu))
- **Repository**: [{{project_name}}]({{source_repository}})
- **Commit hash** `{{commit_hash}}`
- **Technologies**
  - Solidity
  - Node.JS

## Issues Summary

| SEVERITY       |    OPEN    |    CLOSED    |
|----------------|:----------:|:------------:|
{{#issues_summary}}
|  {{severity}}  |  {{open}}  |  {{closed}}  |
{{/issues_summary}}

## Executive summary

This report represents the results of the engagement with **{{client_name}}** to review **{{project_name}}**.

The review was conducted over the course of **{{review_period}}** from **{{date_interval}}**. A total of **{{person_days}} person-days** were spent reviewing the code.

## Scope

The initial review focused on the [{{project_name}}]({{source_repository}}) repository, identified by the commit hash `{{commit_hash}}`.

We focused on manually reviewing the codebase, searching for security issues such as, but not limited to, re-entrancy problems, transaction ordering, block timestamp dependency, exception handling, call stack depth limitation, integer overflow/underflow, self-destructible contracts, unsecured balance, use of origin, costly gas patterns, architectural problems, code readability.

**Includes:**
- code/contracts/Land.sol


## Recommendations

We identified a few possible general improvements that are not security issues during the review, which will bring value to the developers and the community reviewing and using the product.

### Increase the number of tests

A good rule of thumb is to have 100% test coverage. This does not guarantee the lack of security problems, but it means that the desired functionality behaves as intended. The negative tests also bring a lot of value because not allowing some actions to happen is also part of the desired behavior.

## Issues

{{#issues}}

### [{{title}}]({{url}})
![Issue status: {{status}}](https://img.shields.io/static/v1?label=Status&message={{status}}&color={{status_color}}&style=flat-square) ![{{severity}}](https://img.shields.io/static/v1?label=Severity&message={{severity}}&color={{severity_color}}&style=flat-square)

{{{body}}}

---

{{/issues}}

## Artifacts

### Surya

Sūrya is a utility tool for smart contract systems. It provides a number of visual outputs and information about the structure of smart contracts. It also supports querying the function call graph in multiple ways to aid in the manual inspection and control flow analysis of contracts.

## Sūrya's Description Report

### Files Description Table


|  File Name  |  SHA-1 Hash  |
|-------------|--------------|
| ./code/contracts/Land.sol | a326ec1307afd3a679ceaddaca7ecba5b73d9733 |


### Contracts Description Table


|  Contract  |         Type        |       Bases      |                  |                 |
|:----------:|:-------------------:|:----------------:|:----------------:|:---------------:|
|     └      |  **Function Name**  |  **Visibility**  |  **Mutability**  |  **Modifiers**  |
||||||
| **Land** | Implementation | ERC721, ERC2981, ReentrancyGuard, Ownable, Pausable |||
| └ | <Constructor> | Public ❗️ | 🛑  | ERC721 |
| └ | setPreviewURI | External ❗️ | 🛑  | onlyOwner |
| └ | setMaxMintPerAddress | External ❗️ | 🛑  | onlyOwner |
| └ | mint | External ❗️ |  💵 | whenNotPaused isCallerValid isTotalMintedExceedsMaxSupply isValidAmount isNFTBalanceExceedsMaxMintPerAddress isWhitelisted |
| └ | batchMint | External ❗️ |  💵 | whenNotPaused isCallerValid isTotalMintedExceedsMaxSupply isValidAmount isNFTBalanceExceedsMaxMintPerAddress isWhitelisted |
| └ | ownerMint | External ❗️ | 🛑  | onlyOwner isTotalMintedExceedsMaxSupply isNFTBalanceExceedsMaxMintPerAddress |
| └ | _batchMintNFT | Private 🔐 | 🛑  | |
| └ | _mintNFT | Private 🔐 | 🛑  | isTokenIdValid |
| └ | setMintPrice | External ❗️ | 🛑  | onlyOwner |
| └ | setWithdrawalRecipient | External ❗️ | 🛑  | onlyOwner |
| └ | setBaseTokenURI | External ❗️ | 🛑  | onlyOwner |
| └ | setContractURI | External ❗️ | 🛑  | onlyOwner |
| └ | tokenURI | Public ❗️ |   | isTokenExist |
| └ | setMerkleRoot | External ❗️ | 🛑  | onlyOwner |
| └ | pause | External ❗️ | 🛑  | onlyOwner |
| └ | unpause | External ❗️ | 🛑  | onlyOwner |
| └ | enableBaseURIMode | External ❗️ | 🛑  | onlyOwner |
| └ | disableBaseURIMode | External ❗️ | 🛑  | onlyOwner |
| └ | withdraw | External ❗️ | 🛑  | onlyOwner nonReentrant isValidRecipient isBalanceEnough |
| └ | withdrawAll | External ❗️ | 🛑  | onlyOwner isValidRecipient isBalanceNotZero |
| └ | _withdraw | Private 🔐 | 🛑  | |
| └ | getContractBalance | External ❗️ |   | onlyOwner |
| └ | getMerkleRoot | External ❗️ |   | onlyOwner |
| └ | getMaxMintPerAddress | External ❗️ |   | onlyOwner |
| └ | isValidMerkleProof | Private 🔐 |   | |
| └ | supportsInterface | Public ❗️ |   |NO❗️ |
| └ | setRoyaltyInfo | Public ❗️ | 🛑  | onlyOwner |


### Legend

|  Symbol  |  Meaning  |
|:--------:|-----------|
|    🛑    | Function can modify state |
|    💵    | Function is payable |

#### Graphs

![Land Graph](./static/Land_graph.png)


![Land Inheritance](./static/Land_inheritance.png)


#### Describe

```text
$ npx surya describe code/contracts/Land.sol       
npx: installed 64 in 7.099s
 +  Land (ERC721, ERC2981, ReentrancyGuard, Ownable, Pausable)
    - [Pub] <Constructor> #
       - modifiers: ERC721
    - [Ext] setPreviewURI #
       - modifiers: onlyOwner
    - [Ext] setMaxMintPerAddress #
       - modifiers: onlyOwner
    - [Ext] mint ($)
       - modifiers: whenNotPaused,isCallerValid,isTotalMintedExceedsMaxSupply,isValidAmount,isNFTBalanceExceedsMaxMintPerAddress,isWhitelisted
    - [Ext] batchMint ($)
       - modifiers: whenNotPaused,isCallerValid,isTotalMintedExceedsMaxSupply,isValidAmount,isNFTBalanceExceedsMaxMintPerAddress,isWhitelisted
    - [Ext] ownerMint #
       - modifiers: onlyOwner,isTotalMintedExceedsMaxSupply,isNFTBalanceExceedsMaxMintPerAddress
    - [Prv] _batchMintNFT #
    - [Prv] _mintNFT #
       - modifiers: isTokenIdValid
    - [Ext] setMintPrice #
       - modifiers: onlyOwner
    - [Ext] setWithdrawalRecipient #
       - modifiers: onlyOwner
    - [Ext] setBaseTokenURI #
       - modifiers: onlyOwner
    - [Ext] setContractURI #
       - modifiers: onlyOwner
    - [Pub] tokenURI
       - modifiers: isTokenExist
    - [Ext] setMerkleRoot #
       - modifiers: onlyOwner
    - [Ext] pause #
       - modifiers: onlyOwner
    - [Ext] unpause #
       - modifiers: onlyOwner
    - [Ext] enableBaseURIMode #
       - modifiers: onlyOwner
    - [Ext] disableBaseURIMode #
       - modifiers: onlyOwner
    - [Ext] withdraw #
       - modifiers: onlyOwner,nonReentrant,isValidRecipient,isBalanceEnough
    - [Ext] withdrawAll #
       - modifiers: onlyOwner,isValidRecipient,isBalanceNotZero
    - [Prv] _withdraw #
    - [Ext] getContractBalance
       - modifiers: onlyOwner
    - [Ext] getMerkleRoot
       - modifiers: onlyOwner
    - [Ext] getMaxMintPerAddress
       - modifiers: onlyOwner
    - [Prv] isValidMerkleProof
    - [Pub] supportsInterface
    - [Pub] setRoyaltyInfo #
       - modifiers: onlyOwner


 ($) = payable function
 # = non-constant function
  
```

### Coverage

No coverage available.

### Tests

```text
$ npm run test                                   

> casinoverse-land@1.0.0 test /home/daniel/Development/github.com/akiratechhq/review-casinoverse-land-2022-08/code
> hardhat test



  Land
    deployment
      ✔ deployer is owner
      ✔ should return the expected name and symbol
      ✔ should return MAX_SUPPLY
      ✔ should return withdrawalRecipient address
      ✔ should return the initial base uri
      ✔ should return the uri suffix
      ✔ should return merkle root
      ✔ should return max mint per wallet address
    setMintingPrice
      ✔ should return mintPrice
      ✔ should be able to set new minting price
      ✔ should emit event MintPriceChanged
    setMerkleRoot
      ✔ should be able to set new merkle root
      ✔ should emit event MerkleRootChanged (38ms)
    setWithdrawalRecipient
      ✔ sould be able to set new recipient address
      ✔ should emit event WithdrawalRecipientChanged
    setMaxMintPerAddress
      ✔ sould be able to set new max mint per wallet address (154ms)
      ✔ sould emit event MaxMintPerAddressChanged
    setBaseTokenURI
      ✔ sould be able to set new base token uri
      ✔ sould emit event BaseTokenURIChanged
    getContractBalance
      ✔ sould return contract balance
    pausing
      ✔ should return if contract is paused
      ✔ should be able to pause contract
      ✔ should be able to unpause contract
    enable disable base uri mode
      ✔ should be able to enable base uri mode
      ✔ should be able to disable base uri mode
      ✔ should emit event BaseURIModeChanged
      ✔ should return base uri if base uri mode is true
      ✔ should return token specific uri if base uri mode is false (76ms)
      ✔ should return preview uri if token uri is empty
    batch minting
      ✔ should be able to batch mint nft
      ✔ should emit event NFTBatchMint
      ✔ should be able to batch mint nft from using contract if owner (97ms)
      ✔ should not be able to batch mint if contract is paused, should be reverted with error message 'Pausable: paused' (42ms)
      ✔ duplicate token id, should be reverted with error message 'ERC721: token already minted'
      ✔ token id should not exceed max supply, should be reverted with error message 'Invalid token id'
      ✔ invalid mint price amount, should be reverted with error message 'Invalid Amount'
      ✔ maxed supply, should be reverted with error message 'Max Reached' (101ms)
      ✔ max mint per address, should be reverted with error message 'Max nft per address reached'
      ✔ not whitelisted, should be reverted with error message 'Not on whitelist'
      ✔ should not allow contract to call batch mint, should be reverted with error message 'Not allowed' (41ms)
    owner minting
      ✔ should be able to owner mint nft
      ✔ should emit event NFTBatchMint
      ✔ duplicate token id, should be reverted with error message 'ERC721: token already minted'
      ✔ token id should not exceed max supply, should be reverted with error message 'Invalid token id'
      ✔ maxed supply, should be reverted with error message 'Max Reached' (86ms)
      ✔ max mint per address, should be reverted with error message 'Max nft per address reached'
    minting
      ✔ should be able to mint nft
      ✔ should emit event NFTSingleMint
      ✔ should be able to mint nft using contract if owner (55ms)
      ✔ should be able to mint nft with different accs (316ms)
      ✔ token id should not exceed max supply, should be reverted with error message 'Invalid token id'
      ✔ token already minted, should be reverted with error message 'ERC721: token already minted'
      ✔ should not be able to mint if contract is paused, should be reverted with error message 'Pausable: paused'
      ✔ maxed supply, should be reverted with error message 'Max Reached' (89ms)
      ✔ invalid mint price amount, should be reverted with error message 'Invalid Amount'
      ✔ not whitelisted, should be reverted with error message 'Not on whitelist'
      ✔ max mint per address, should be reverted with error message 'Max nft per address reached' (77ms)
      ✔ should not allow contract to call mint, should be reverted with error message 'Not allowed'
    withdrawAll
      ✔ should be able to withdraw all balance (79ms)
      ✔ should emit event Withdraw (75ms)
      ✔ invalid recipient, should be reverted with error message 'Invalid Recipient'
      ✔ invalid balance, should be reverted with error message 'No Balance'
      ✔ caller is not owner, should be reverted with errror message 'Ownable: caller is not the owner'
    withdraw
      ✔ should be able to withdraw balance (49ms)
      ✔ should be able to withdraw balance (49ms)
      ✔ should be able to withdraw all balance (38ms)
      ✔ invalid recipient, should be reverted with error message 'Invalid Recipient'
      ✔ invalid balance, should be reverted with error message 'Not Enough Balance'
      ✔ caller is not owner, should be reverted with errror message 'Ownable: caller is not the owner'
    royalty info
      ✔ should return current royalty info
      ✔ should be able to set new royalty info
      ✔ should emit event RoyaltyInfoChanged
    setContractURI
      ✔ should be able to set new contract URI
      ✔ should emit event ContractURIChanged
    setPreviewURI
      ✔ should be able to set new preview URI
      ✔ should emit event PreviewURIChanged


  76 passing (9s)
```

## License

This report falls under the terms described in the included [LICENSE](./LICENSE).

{{> partials/features}}
<link rel="stylesheet" href="./style/print.css"/>
